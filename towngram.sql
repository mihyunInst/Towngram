CREATE TABLE "GRAM_USER" (
    "USER_NO"   NUMBER      PRIMARY KEY,
    "USER_ID"	VARCHAR2(100) NOT NULL,
    "USER_PWD" VARCHAR2(200) NOT NULL,
    "USER_NAME" 	VARCHAR2(100) NOT NULL,
    "USER_REGION"   VARCHAR2(1000)      NOT NULL,
    "USER_GENDER"   CHAR(1)  DEFAULT 'M' NOT NULL CONSTRAINT GENDER_CHECK CHECK (USER_GENDER IN('M','F')),
    "ENROLL_DATE"   DATE   DEFAULT SYSDATE   NOT NULL
);

DROP TABLE "GRAM_USER";
DROP SEQUENCE "SEQ_USER_NO";

COMMENT ON COLUMN "GRAM_USER"."USER_NO" IS '회원 번호';
COMMENT ON COLUMN "GRAM_USER"."USER_NAME" IS '이름';
COMMENT ON COLUMN "GRAM_USER"."USER_ID" IS '아이디';
COMMENT ON COLUMN "GRAM_USER"."USER_PWD" IS '비밀번호';
COMMENT ON COLUMN "GRAM_USER"."USER_REGION" IS '지역';   
COMMENT ON COLUMN "GRAM_USER"."USER_GENDER" IS '성별';
COMMENT ON COLUMN "GRAM_USER"."ENROLL_DATE" IS '가입일';

CREATE SEQUENCE SEQ_USER_NO NOCACHE;





CREATE TABLE GRAM_CARD (
	CARD_NO	NUMBER	PRIMARY KEY,
	CARD_CONTENT	VARCHAR2(2000)	NOT NULL,
	CARD_FEELING  VARCHAR2(100) NOT NULL,
	CARD_ST	CHAR(1)	DEFAULT 'N'	NOT NULL,
	USER_NO NUMBER NOT NULL,
	CREATE_DT DATE DEFAULT SYSDATE,
	CARD_LIKE NUMBER NOT NULL,
	CARD_COUNT NUMBER NOT NULL
);


COMMENT ON COLUMN "GRAM_CARD"."CARD_NO" IS '카드 번호';
COMMENT ON COLUMN "GRAM_CARD"."CARD_CONTENT" IS '카드 내용';
COMMENT ON COLUMN "GRAM_CARD"."CARD_FEELING" IS '카드 기분';   
COMMENT ON COLUMN "GRAM_CARD"."CARD_ST" IS '카드 상태';
COMMENT ON COLUMN "GRAM_CARD"."USER_NO" IS '작성자 회원 번호';
COMMENT ON COLUMN "GRAM_CARD"."CREATE_DT" IS '작성일';
COMMENT ON COLUMN "GRAM_CARD"."CARD_LIKE" IS '좋아요수';
COMMENT ON COLUMN "GRAM_CARD"."CARD_COUNT" IS '조회수';

CREATE SEQUENCE SEQ_CARD_NO NOCACHE; 
DROP SEQUENCE "SEQ_CARD_NO";


INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, '나 오늘 기분이 너무 안좋아.. 엄마랑 싸웠는데 내가 어떻게 해야할지 모르겠어 ㅜㅠㅜ', '비','Y', 1, SYSDATE, 3, 26
);

INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, '오늘은 날씨에 햇살이 내 피부를 감싸주는 기분 좋은 하루예요. 함께 눈부시게 빛나는 하루를 보내봐요! ', '맑음','Y', 2, SYSDATE, 5, 10
);


INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, 'Embracing the beauty of simplicity. Sometimes, all we need is a quiet moment to appreciate the little things that bring us joy. ', '흐림','Y', 1, SYSDATE, 28, 100
);


INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, 'Life is a beautiful adventure, and Im ready to explore every corner of it!', '맑음','Y', 3, SYSDATE, 65, 256
);


INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, '남친이랑 싸움. 진절머리나서 이제 진짜 헤어지고싶은데 안전이별하는 법좀 알려주삼', '천둥','Y', 1, SYSDATE, 1, 5
);



INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, '프로젝트도 해야하고, 리액트 공부도 해야하고 너무 빡세다 삶이... 세상이 날 억까해!', '흐림','Y', 4, SYSDATE, 18, 56
);

INSERT INTO GRAM_CARD VALUES(
   SEQ_CARD_NO.NEXTVAL, '학원가기 싫으다', '흐림','Y', 5, SYSDATE, 22, 102
);

COMMIT;


DROP TABLE GRAM_CARD;


ALTER TABLE GRAM_CARD
ADD CONSTRAINT "CHK_CARD_ST"
CHECK ("CARD_ST" IN ('N', 'Y'));

SELECT CARD_NO, CARD_CONTENT, CARD_FEELING, CARD_ST,
  		USER_NO, CREATE_DT, CARD_LIKE, CARD_COUNT, USER_NAME, USER_REGION
  		FROM GRAM_CARD
  		JOIN GRAM_USER USING(USER_NO)
  		WHERE CARD_ST = 'Y'
  		ORDER BY CARD_NO DESC;



ALTER TABLE GRAM_CARD
ADD CONSTRAINT "FK_CARD_MEMBER" 
FOREIGN KEY("USER_NO")
REFERENCES GRAM_USER; 

COMMIT;

-- 샘플 데이터
INSERT INTO GRAM_USER VALUES(
   SEQ_USER_NO.NEXTVAL, 'user01','pwss01','조미현', '성동구 행당동', 'F', SYSDATE
);

INSERT INTO GRAM_USER VALUES(
   SEQ_USER_NO.NEXTVAL,'user02','pwss02', '이현경', '강서구 화곡동', 'M', SYSDATE
);

INSERT INTO GRAM_USER VALUES(
   SEQ_USER_NO.NEXTVAL,'user03','pwss03', '오가람', '광진구 면목동', 'M', SYSDATE
);

INSERT INTO GRAM_USER VALUES(
   SEQ_USER_NO.NEXTVAL, 'user04','pwss04','김덕근', '경기도 시흥시', 'M', SYSDATE
);

INSERT INTO GRAM_USER VALUES(
   SEQ_USER_NO.NEXTVAL,'user05','pwss05', '이진영', '광진구 자양동', 'M', SYSDATE
);

SELECT * FROM GRAM_USER;
SELECT * FROM GRAM_CARD;

COMMIT;
ROLLBACK;


-- 검색
SELECT CARD_NO, CARD_CONTENT, CARD_FEELING, CARD_ST,
  		USER_NO, CREATE_DT, CARD_LIKE, CARD_COUNT, USER_NAME, USER_REGION
  		FROM GRAM_CARD
  		JOIN GRAM_USER USING(USER_NO)
  		WHERE CARD_ST = 'Y'
  		AND CARD_CONTENT LIKE '%기분%'
  		ORDER BY CARD_NO;

  	
 
SELECT USER_NO, USER_ID, USER_NAME, USER_REGION, USER_GENDER, ENROLL_DATE, USER_PWD
FROM GRAM_USER
WHERE USER_ID = 'user01';


/*UPDATE GRAM_CARD
SET CARD_LIKE = CARD_LIKE + 1
WHERE CARD_NO = 1;*/

	